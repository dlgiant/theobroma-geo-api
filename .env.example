# Environment Template Files
# 
# These template files show the required environment variables for the application.
# Copy these files and fill in the actual values for your environment.

## For Development (.env)
```bash
# Copy this file to .env and fill in your local development values
cp .env.template .env
```

## For Staging (.env.staging)
```bash
# Set environment variables in your deployment system instead of using this file
export DATABASE_URL="postgresql://user:password@host:port/database"
export DB_HOST="your-db-host"
export DB_PORT="5432"
export DB_NAME="your-database-name"
export DB_USER="your-username"
export DB_PASSWORD="your-secure-password"
```

## Security Notes

⚠️ **NEVER commit actual credentials to version control**

- Use environment variables for all sensitive configuration
- Use secrets management systems (AWS Secrets Manager, Azure Key Vault, etc.)
- Use different credentials for each environment
- Rotate credentials regularly
- Use least-privilege database users

## Required Environment Variables

### Database Configuration
- `DATABASE_URL`: Full PostgreSQL connection string
- `DB_HOST`: Database hostname
- `DB_PORT`: Database port (default: 5432)
- `DB_NAME`: Database name
- `DB_USER`: Database username
- `DB_PASSWORD`: Database password

### Application Configuration
- `ENVIRONMENT`: Application environment (dev/staging/prod)
- `API_VERSION`: API version string
- `DEBUG`: Enable/disable debug mode
- `LOG_LEVEL`: Logging level (DEBUG/INFO/WARNING/ERROR)

### CORS Configuration
- `ALLOWED_ORIGINS`: Comma-separated list of allowed origins
